"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/admin/dashboard/page",{

/***/ "(app-pages-browser)/./src/utils/persianDate.ts":
/*!**********************************!*\
  !*** ./src/utils/persianDate.ts ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PersianDate: function() { return /* binding */ PersianDate; },\n/* harmony export */   englishToPersianNumbers: function() { return /* binding */ englishToPersianNumbers; },\n/* harmony export */   formatAdminDate: function() { return /* binding */ formatAdminDate; },\n/* harmony export */   formatDetailedDate: function() { return /* binding */ formatDetailedDate; },\n/* harmony export */   formatRelativeTime: function() { return /* binding */ formatRelativeTime; },\n/* harmony export */   formatTableDate: function() { return /* binding */ formatTableDate; },\n/* harmony export */   getCurrentPersianDate: function() { return /* binding */ getCurrentPersianDate; },\n/* harmony export */   getCurrentPersianTime: function() { return /* binding */ getCurrentPersianTime; },\n/* harmony export */   persianToEnglishNumbers: function() { return /* binding */ persianToEnglishNumbers; }\n/* harmony export */ });\n/* harmony import */ var _barrel_optimize_names_format_formatDistanceToNow_parseISO_date_fns__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! __barrel_optimize__?names=format,formatDistanceToNow,parseISO!=!date-fns */ \"(app-pages-browser)/./node_modules/date-fns/format.mjs\");\n/* harmony import */ var _barrel_optimize_names_format_formatDistanceToNow_parseISO_date_fns__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! __barrel_optimize__?names=format,formatDistanceToNow,parseISO!=!date-fns */ \"(app-pages-browser)/./node_modules/date-fns/formatDistanceToNow.mjs\");\n/* harmony import */ var _barrel_optimize_names_format_formatDistanceToNow_parseISO_date_fns__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! __barrel_optimize__?names=format,formatDistanceToNow,parseISO!=!date-fns */ \"(app-pages-browser)/./node_modules/date-fns/parseISO.mjs\");\n/* harmony import */ var date_fns_locale_fa_IR__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! date-fns/locale/fa-IR */ \"(app-pages-browser)/./node_modules/date-fns/locale/fa-IR.mjs\");\n/* harmony import */ var date_fns_jalali__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! date-fns-jalali */ \"(app-pages-browser)/./node_modules/date-fns-jalali/format.js\");\n/* harmony import */ var date_fns_jalali__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! date-fns-jalali */ \"(app-pages-browser)/./node_modules/date-fns-jalali/formatDistanceToNow.js\");\n// Persian Date Utilities for Admin Panel\n// ابزارهای تاریخ فارسی برای پنل مدیریت\n\n\n\nclass PersianDate {\n    /**\r\n   * Format date in Persian (Jalali) calendar\r\n   */ toPersian() {\n        try {\n            switch(this.options.format){\n                case \"jalali\":\n                    return (0,date_fns_jalali__WEBPACK_IMPORTED_MODULE_0__.format)(this.date, \"yyyy/MM/dd HH:mm\");\n                case \"long\":\n                    return (0,date_fns_jalali__WEBPACK_IMPORTED_MODULE_0__.format)(this.date, \"EEEE d MMMM yyyy HH:mm\", {\n                        locale: date_fns_locale_fa_IR__WEBPACK_IMPORTED_MODULE_1__.faIR\n                    });\n                case \"relative\":\n                    return (0,date_fns_jalali__WEBPACK_IMPORTED_MODULE_2__.formatDistanceToNow)(this.date, {\n                        addSuffix: true,\n                        locale: date_fns_locale_fa_IR__WEBPACK_IMPORTED_MODULE_1__.faIR\n                    });\n                case \"short\":\n                default:\n                    return (0,date_fns_jalali__WEBPACK_IMPORTED_MODULE_0__.format)(this.date, \"yyyy/MM/dd\");\n            }\n        } catch (error) {\n            console.error(\"Error formatting Persian date:\", error);\n            return this.date.toLocaleDateString(\"fa-IR\");\n        }\n    }\n    /**\r\n   * Format date in Gregorian calendar\r\n   */ toGregorian() {\n        try {\n            switch(this.options.format){\n                case \"long\":\n                    return (0,_barrel_optimize_names_format_formatDistanceToNow_parseISO_date_fns__WEBPACK_IMPORTED_MODULE_3__.format)(this.date, \"EEEE, MMMM d, yyyy HH:mm\", {\n                        locale: date_fns_locale_fa_IR__WEBPACK_IMPORTED_MODULE_1__.faIR\n                    });\n                case \"relative\":\n                    return (0,_barrel_optimize_names_format_formatDistanceToNow_parseISO_date_fns__WEBPACK_IMPORTED_MODULE_4__.formatDistanceToNow)(this.date, {\n                        addSuffix: true,\n                        locale: date_fns_locale_fa_IR__WEBPACK_IMPORTED_MODULE_1__.faIR\n                    });\n                case \"short\":\n                default:\n                    return (0,_barrel_optimize_names_format_formatDistanceToNow_parseISO_date_fns__WEBPACK_IMPORTED_MODULE_3__.format)(this.date, \"yyyy/MM/dd\");\n            }\n        } catch (error) {\n            console.error(\"Error formatting Gregorian date:\", error);\n            return this.date.toLocaleDateString(\"en-US\");\n        }\n    }\n    /**\r\n   * Format date based on locale preference\r\n   */ format() {\n        return this.options.locale === \"fa\" ? this.toPersian() : this.toGregorian();\n    }\n    /**\r\n   * Get relative time (e.g., \"2 hours ago\")\r\n   */ getRelativeTime() {\n        try {\n            if (this.options.locale === \"fa\") {\n                return (0,date_fns_jalali__WEBPACK_IMPORTED_MODULE_2__.formatDistanceToNow)(this.date, {\n                    addSuffix: true,\n                    locale: date_fns_locale_fa_IR__WEBPACK_IMPORTED_MODULE_1__.faIR\n                });\n            } else {\n                return (0,_barrel_optimize_names_format_formatDistanceToNow_parseISO_date_fns__WEBPACK_IMPORTED_MODULE_4__.formatDistanceToNow)(this.date, {\n                    addSuffix: true,\n                    locale: date_fns_locale_fa_IR__WEBPACK_IMPORTED_MODULE_1__.faIR\n                });\n            }\n        } catch (error) {\n            console.error(\"Error getting relative time:\", error);\n            return this.date.toLocaleDateString();\n        }\n    }\n    /**\r\n   * Get formatted time only\r\n   */ getTime() {\n        try {\n            return (0,_barrel_optimize_names_format_formatDistanceToNow_parseISO_date_fns__WEBPACK_IMPORTED_MODULE_3__.format)(this.date, \"HH:mm:ss\");\n        } catch (error) {\n            console.error(\"Error formatting time:\", error);\n            return this.date.toLocaleTimeString();\n        }\n    }\n    /**\r\n   * Get day of week in Persian\r\n   */ getDayOfWeek() {\n        try {\n            const days = {\n                \"fa\": [\n                    \"یکشنبه\",\n                    \"دوشنبه\",\n                    \"سه‌شنبه\",\n                    \"چهارشنبه\",\n                    \"پنج‌شنبه\",\n                    \"جمعه\",\n                    \"شنبه\"\n                ],\n                \"en\": [\n                    \"Sunday\",\n                    \"Monday\",\n                    \"Tuesday\",\n                    \"Wednesday\",\n                    \"Thursday\",\n                    \"Friday\",\n                    \"Saturday\"\n                ]\n            };\n            const locale = this.options.locale || \"fa\";\n            const dayIndex = this.date.getDay();\n            return days[locale][dayIndex];\n        } catch (error) {\n            console.error(\"Error getting day of week:\", error);\n            return \"\";\n        }\n    }\n    /**\r\n   * Get month name in Persian\r\n   */ getMonthName() {\n        try {\n            const months = {\n                \"fa\": [\n                    \"فروردین\",\n                    \"اردیبهشت\",\n                    \"خرداد\",\n                    \"تیر\",\n                    \"مرداد\",\n                    \"شهریور\",\n                    \"مهر\",\n                    \"آبان\",\n                    \"آذر\",\n                    \"دی\",\n                    \"بهمن\",\n                    \"اسفند\"\n                ],\n                \"en\": [\n                    \"January\",\n                    \"February\",\n                    \"March\",\n                    \"April\",\n                    \"May\",\n                    \"June\",\n                    \"July\",\n                    \"August\",\n                    \"September\",\n                    \"October\",\n                    \"November\",\n                    \"December\"\n                ]\n            };\n            const locale = this.options.locale || \"fa\";\n            if (locale === \"fa\") {\n                // For Jalali calendar, we need to calculate the month\n                const jalaliDate = this.toJalaliDate();\n                return months.fa[jalaliDate.month - 1];\n            } else {\n                return months.en[this.date.getMonth()];\n            }\n        } catch (error) {\n            console.error(\"Error getting month name:\", error);\n            return \"\";\n        }\n    }\n    /**\r\n   * Convert to Jalali date object\r\n   */ toJalaliDate() {\n        try {\n            // Simple conversion (this is a basic implementation)\n            // For production, use a proper Jalali calendar library\n            const year = this.date.getFullYear();\n            const month = this.date.getMonth() + 1;\n            const day = this.date.getDate();\n            // Basic Jalali conversion (approximate)\n            let jalaliYear = year - 621;\n            let jalaliMonth = month + 2;\n            let jalaliDay = day + 1;\n            if (jalaliMonth > 12) {\n                jalaliMonth -= 12;\n                jalaliYear += 1;\n            }\n            return {\n                year: jalaliYear,\n                month: jalaliMonth,\n                day: jalaliDay\n            };\n        } catch (error) {\n            console.error(\"Error converting to Jalali:\", error);\n            return {\n                year: 0,\n                month: 0,\n                day: 0\n            };\n        }\n    }\n    /**\r\n   * Check if date is today\r\n   */ isToday() {\n        const today = new Date();\n        return this.date.toDateString() === today.toDateString();\n    }\n    /**\r\n   * Check if date is yesterday\r\n   */ isYesterday() {\n        const yesterday = new Date();\n        yesterday.setDate(yesterday.getDate() - 1);\n        return this.date.toDateString() === yesterday.toDateString();\n    }\n    /**\r\n   * Check if date is this week\r\n   */ isThisWeek() {\n        const today = new Date();\n        const weekStart = new Date(today);\n        weekStart.setDate(today.getDate() - today.getDay());\n        const weekEnd = new Date(weekStart);\n        weekEnd.setDate(weekStart.getDate() + 6);\n        return this.date >= weekStart && this.date <= weekEnd;\n    }\n    /**\r\n   * Check if date is this month\r\n   */ isThisMonth() {\n        const today = new Date();\n        return this.date.getMonth() === today.getMonth() && this.date.getFullYear() === today.getFullYear();\n    }\n    /**\r\n   * Check if date is this year\r\n   */ isThisYear() {\n        const today = new Date();\n        return this.date.getFullYear() === today.getFullYear();\n    }\n    constructor(date, options = {}){\n        this.date = typeof date === \"string\" ? (0,_barrel_optimize_names_format_formatDistanceToNow_parseISO_date_fns__WEBPACK_IMPORTED_MODULE_5__.parseISO)(date) : new Date(date);\n        this.options = {\n            locale: \"fa\",\n            format: \"short\",\n            timezone: \"Asia/Tehran\",\n            ...options\n        };\n    }\n}\n/**\r\n * Format date for display in admin panel\r\n */ const formatAdminDate = function(date) {\n    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    try {\n        // Validate input date\n        if (!date) {\n            return \"تاریخ نامعتبر\";\n        }\n        const persianDate = new PersianDate(date, options);\n        return persianDate.format();\n    } catch (error) {\n        console.error(\"Error formatting admin date:\", error);\n        return \"تاریخ نامعتبر\";\n    }\n};\n/**\r\n * Format date as relative time\r\n */ const formatRelativeTime = function(date) {\n    let locale = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"fa\";\n    const persianDate = new PersianDate(date, {\n        locale,\n        format: \"relative\"\n    });\n    return persianDate.getRelativeTime();\n};\n/**\r\n * Format date for tables and lists\r\n */ const formatTableDate = function(date) {\n    let locale = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"fa\";\n    const persianDate = new PersianDate(date, {\n        locale,\n        format: \"short\"\n    });\n    return persianDate.format();\n};\n/**\r\n * Format date for detailed views\r\n */ const formatDetailedDate = function(date) {\n    let locale = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"fa\";\n    const persianDate = new PersianDate(date, {\n        locale,\n        format: \"long\"\n    });\n    return persianDate.format();\n};\n/**\r\n * Get current date in Persian format\r\n */ const getCurrentPersianDate = ()=>{\n    return formatAdminDate(new Date(), {\n        locale: \"fa\",\n        format: \"long\"\n    });\n};\n/**\r\n * Get current time in Persian format\r\n */ const getCurrentPersianTime = ()=>{\n    try {\n        const now = new Date();\n        return (0,_barrel_optimize_names_format_formatDistanceToNow_parseISO_date_fns__WEBPACK_IMPORTED_MODULE_3__.format)(now, \"HH:mm:ss\");\n    } catch (error) {\n        console.error(\"Error getting current Persian time:\", error);\n        return new Date().toLocaleTimeString(\"fa-IR\");\n    }\n};\n/**\r\n * Convert Persian numbers to English (for calculations)\r\n */ const persianToEnglishNumbers = (str)=>{\n    const persianNumbers = [\n        \"۰\",\n        \"۱\",\n        \"۲\",\n        \"۳\",\n        \"۴\",\n        \"۵\",\n        \"۶\",\n        \"۷\",\n        \"۸\",\n        \"۹\"\n    ];\n    const englishNumbers = [\n        \"0\",\n        \"1\",\n        \"2\",\n        \"3\",\n        \"4\",\n        \"5\",\n        \"6\",\n        \"7\",\n        \"8\",\n        \"9\"\n    ];\n    return str.split(\"\").map((char)=>{\n        const index = persianNumbers.indexOf(char);\n        return index !== -1 ? englishNumbers[index] : char;\n    }).join(\"\");\n};\n/**\r\n * Convert English numbers to Persian (for display)\r\n */ const englishToPersianNumbers = (str)=>{\n    const englishNumbers = [\n        \"0\",\n        \"1\",\n        \"2\",\n        \"3\",\n        \"4\",\n        \"5\",\n        \"6\",\n        \"7\",\n        \"8\",\n        \"9\"\n    ];\n    const persianNumbers = [\n        \"۰\",\n        \"۱\",\n        \"۲\",\n        \"۳\",\n        \"۴\",\n        \"۵\",\n        \"۶\",\n        \"۷\",\n        \"۸\",\n        \"۹\"\n    ];\n    return str.split(\"\").map((char)=>{\n        const index = englishNumbers.indexOf(char);\n        return index !== -1 ? persianNumbers[index] : char;\n    }).join(\"\");\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (PersianDate);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/utils/persianDate.ts\n"));

/***/ })

});