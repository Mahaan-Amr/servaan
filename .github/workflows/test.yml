name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_USER: postgres
          POSTGRES_DB: servaan_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: src/backend/package-lock.json

    - name: Install backend dependencies
      working-directory: ./src/backend
      run: npm ci

    - name: Install Prisma dependencies
      working-directory: ./src/prisma
      run: npm ci

    - name: Generate Prisma client
      working-directory: ./src/prisma
      run: npx prisma generate

    - name: Run database migrations
      working-directory: ./src/prisma
      run: npx prisma migrate deploy
      env:
        DATABASE_URL: postgresql://postgres:password@localhost:5432/servaan_test

    - name: Run backend tests
      working-directory: ./src/backend
      run: npm test
      env:
        NODE_ENV: test
        DATABASE_URL: postgresql://postgres:password@localhost:5432/servaan_test
        JWT_SECRET: test-jwt-secret-key-for-ci
        JWT_EXPIRES_IN: 1h

    - name: Upload backend coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./src/backend/coverage/lcov.info
        flags: backend
        name: backend-coverage

  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: src/frontend/package-lock.json

    - name: Install frontend dependencies
      working-directory: ./src/frontend
      run: npm ci

    - name: Run frontend tests
      working-directory: ./src/frontend
      run: npm test -- --coverage --watchAll=false

    - name: Upload frontend coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./src/frontend/coverage/lcov.info
        flags: frontend
        name: frontend-coverage

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_USER: postgres
          POSTGRES_DB: servaan_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install all dependencies
      run: |
        cd src/backend && npm ci
        cd ../frontend && npm ci
        cd ../prisma && npm ci

    - name: Generate Prisma client
      working-directory: ./src/prisma
      run: npx prisma generate

    - name: Run database migrations
      working-directory: ./src/prisma
      run: npx prisma migrate deploy
      env:
        DATABASE_URL: postgresql://postgres:password@localhost:5432/servaan_test

    - name: Seed test database
      working-directory: ./src/prisma
      run: npm run seed
      env:
        DATABASE_URL: postgresql://postgres:password@localhost:5432/servaan_test

    - name: Start backend server
      working-directory: ./src/backend
      run: npm run dev &
      env:
        NODE_ENV: test
        DATABASE_URL: postgresql://postgres:password@localhost:5432/servaan_test
        JWT_SECRET: test-jwt-secret-key-for-ci
        PORT: 3001

    - name: Wait for backend to be ready
      run: |
        timeout 60 bash -c 'until curl -f http://localhost:3001/health; do sleep 2; done'

    - name: Run integration tests
      working-directory: ./src/backend
      run: npm run test:integration
      env:
        NODE_ENV: test
        DATABASE_URL: postgresql://postgres:password@localhost:5432/servaan_test
        JWT_SECRET: test-jwt-secret-key-for-ci

  lint-and-format:
    name: Lint and Format Check
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: |
        cd src/backend && npm ci
        cd ../frontend && npm ci

    - name: Run backend linting
      working-directory: ./src/backend
      run: npm run lint || true

    - name: Run frontend linting
      working-directory: ./src/frontend
      run: npm run lint

    - name: Check TypeScript compilation
      run: |
        cd src/backend && npx tsc --noEmit
        cd ../frontend && npx tsc --noEmit 